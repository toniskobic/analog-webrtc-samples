<script lang="ts">
import {
  signal,
  inject,
  afterNextRender,
  viewChild,
  ElementRef
} from "@angular/core";
import { HlmButtonDirective } from "@spartan-ng/ui-button-helm";
import { CanvasService } from "../../services/canvas.service";
import { MediaStreamService } from "../../services/media-stream.service";
import { Subject } from "rxjs";

defineMetadata({
  selector: "app-canvas-get-user-media",
  imports: [HlmButtonDirective],
});

const mediaStreamService = inject(MediaStreamService);
const canvasService = inject(CanvasService);
const stream = signal<MediaStream | undefined>(undefined);
const rendered$ = new Subject<void>();

const video = viewChild<ElementRef<HTMLVideoElement>>('video');
const canvas = viewChild<ElementRef<HTMLCanvasElement>>('canvas');

onInit(() => {
  rendered$.subscribe(async () => {
    const mediaStream = await mediaStreamService.getUserMedia({ video: true, audio: false });
    stream.set(mediaStream);
  });
});

afterNextRender(async () => {
  rendered$.next();
});

function onClick() {
  const videoEl = video()?.nativeElement;
  const canvasEl = canvas()?.nativeElement;
  if (!canvasEl || !videoEl) return;
  canvasService.drawImage(canvasEl, videoEl);
}

onDestroy(() => {
  stream()?.getTracks().forEach((track) => {
    track.stop();
  });
  rendered$.unsubscribe();
});
</script>

<template>
<div class="flex flex-col items-center py-3">
  <div class="flex flex-row flex-wrap justify-center items-start gap-3 px-4">
    <div class="flex flex-col items-start gap-3">
      <video #video class="block w-[640px] max-w-full aspect-[64/48] rounded-3xl bg-secondary" autoplay playsinline
        [srcObject]="stream()"></video>
      <button hlmBtn (click)="onClick()">Take snapshot</button>
    </div>
    <canvas #canvas class="block w-[640px] max-w-full aspect-[64/48] rounded-3xl bg-secondary"></canvas></div>
  </div>
</template>
